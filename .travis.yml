language: php
sudo: false

env:
  global:
    - PATH="$HOME/bin:./vendor/bin:$PATH"

matrix:
  fast_finish: true
  include:
    - php: '7.0'
    - php: '7.0'
      env: COMPOSER_FLAGS="--prefer-lowest"
    - php: hhvm
      env: COMPOSER_FLAGS="--prefer-lowest --ignore-platform-reqs"
    - php: hhvm
      env: COMPOSER_FLAGS="--ignore-platform-reqs"
    - php: '7.0'
      env: SYMFONY=2.8.*
    - php: '7.0'
      env: SYMFONY=3.0.*
    - php: '7.0'
      env: SYMFONY=3.1.*
    - php: '7.0'
      env: SYMFONY=3.2.*
    - php: '7.0'
      env: SYMFONY=3.3.*
    - php: '7.0'
      env: SYMFONY=4.0.*
    - php: '7.0'
      env: SYMFONY=dev-master
    - php: nightly
  allow_failures:
    - php: hhvm
    - php: nightly
    - env: SYMFONY=dev-master
    - env: SYMFONY=4.0.*

cache:
  directories:
    - $HOME/.composer/cache/files

before_install:
  - if [ "$TRAVIS_PHP_VERSION" != "hhvm" ]; then phpenv config-rm xdebug.ini; fi;
  - composer self-update
  -  if [ "$GITHUB_OAUTH_TOKEN" != "" ]; then composer config --quiet --global github-oauth.github.com ${GITHUB_OAUTH_TOKEN}; fi;
  - composer require "satooshi/php-coveralls" --no-update
  - composer require "phpunit/phpunit:^5.6" --no-update
  - if [ "$SYMFONY" != "" ]; then composer require "symfony/symfony:${SYMFONY}" --no-update; fi;

install:
  - mkdir --parents "${HOME}/bin"
  - wget https://scrutinizer-ci.com/ocular.phar --output-document="${HOME}/bin/ocular" && chmod +x "${HOME}/bin/ocular"
  - composer global require --prefer-dist --no-interaction sllh/composer-lint:@stable
  - composer update --prefer-dist --no-interaction ${COMPOSER_FLAGS}

before_script:
  - if [ "$TRAVIS_PHP_VERSION" != "hhvm" ]; then echo "zend_extension=xdebug.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi;

script:
  - composer validate
  - vendor/bin/phpunit -c . --coverage-clover=./build/coverage/coverage.xml

after_success:
  - ocular code-coverage:upload --format=php-clover ./build/coverage/coverage.xml
  - php vendor/bin/coveralls -v

notifications:
  on_success: never
  on_failure: always
